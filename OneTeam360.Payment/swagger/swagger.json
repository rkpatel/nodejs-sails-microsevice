{
  "openapi": "3.0.0",
  "info": {
    "title": "Swagger Json",
    "description": "This is a generated swagger json for your sails project",
    "termsOfService": "http://example.com/terms",
    "contact": {
      "name": "Theophilus Omoregbee",
      "url": "http://github.com/theo4u",
      "email": "theo4u@ymail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:1337/"
    }
  ],
  "externalDocs": {
    "url": "http://theophilus.ziippii.com"
  },
  "tags": [
    {
      "name": "CountryStates"
    }
  ],
  "components": {
    "schemas": {
      "account": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/account-without-required-constraint"
          },
          {
            "required": [
              "name",
              "address"
            ]
          }
        ]
      },
      "account-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Account**",
        "properties": {
          "account_id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "onboard_status": {
            "type": "string",
            "enum": [
              "Completed"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "Inactive",
              "Active"
            ]
          },
          "created_by": {
            "type": "number",
            "format": "double"
          },
          "created_date": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          },
          "last_updated_by": {
            "type": "number",
            "format": "double"
          },
          "last_updated_date": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          }
        }
      },
      "accountconfiguration": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/accountconfiguration-without-required-constraint"
          }
        ]
      },
      "accountconfiguration-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **AccountConfiguration**",
        "properties": {
          "account_configuration_id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "account_id": {
            "description": "JSON dictionary representing the **account** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/account"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "sequence": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "accountconfigurationdetail": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/accountconfigurationdetail-without-required-constraint"
          }
        ]
      },
      "accountconfigurationdetail-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **AccountConfigurationDetail**",
        "properties": {
          "account_configuration_detail_id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "account_configuration_id": {
            "description": "JSON dictionary representing the **accountconfiguration** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/accountconfiguration"
              }
            ]
          },
          "name": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "default_value": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_encrypted": {
            "type": "number",
            "format": "double"
          },
          "is_editable": {
            "type": "number",
            "format": "double"
          },
          "sequence": {
            "type": "number",
            "format": "double"
          },
          "last_updated_by": {
            "type": "number",
            "format": "double"
          },
          "last_updated_date": {
            "type": "string",
            "format": "date-time",
            "description": "Note Sails special attributes: autoCreatedAt"
          }
        }
      },
      "country": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/country-without-required-constraint"
          }
        ]
      },
      "country-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **Country**",
        "properties": {
          "country_id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "country_name": {
            "type": "string"
          },
          "country_code": {
            "type": "string"
          }
        }
      },
      "state": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/state-without-required-constraint"
          }
        ]
      },
      "state-without-required-constraint": {
        "type": "object",
        "description": "Sails ORM Model **State**",
        "properties": {
          "state_id": {
            "type": "integer",
            "format": "int64",
            "uniqueItems": true,
            "description": "Note Sails special attributes: autoIncrement"
          },
          "state_name": {
            "type": "string"
          },
          "state_code": {
            "type": "string"
          },
          "country_id": {
            "description": "JSON dictionary representing the **country** instance or FK when creating / updating / not populated",
            "oneOf": [
              {
                "$ref": "#/components/schemas/country"
              }
            ]
          }
        }
      }
    },
    "parameters": {
      "AttributeFilterParam": {
        "in": "query",
        "name": "_*_",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "To filter results based on a particular attribute, specify a query parameter with the same name as the attribute defined on your model. For instance, if our `Purchase` model has an `amount` attribute, we could send `GET /purchase?amount=99.99` to return a list of $99.99 purchases."
      },
      "WhereQueryParam": {
        "in": "query",
        "name": "where",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "Instead of filtering based on a specific attribute, you may instead choose to provide a `where` parameter with the WHERE piece of a [Waterline criteria](https://sailsjs.com/documentation/concepts/models-and-orm/query-language), _encoded as a JSON string_. This allows you to take advantage of `contains`, `startsWith`, and other sub-attribute criteria modifiers for more powerful `find()` queries.\n\ne.g. `?where={\"name\":{\"contains\":\"theodore\"}}`"
      },
      "LimitQueryParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The maximum number of records to send back (useful for pagination). Defaults to 30."
      },
      "SkipQueryParam": {
        "in": "query",
        "name": "skip",
        "required": false,
        "schema": {
          "type": "integer"
        },
        "description": "The number of records to skip (useful for pagination)."
      },
      "SortQueryParam": {
        "in": "query",
        "name": "sort",
        "required": false,
        "schema": {
          "type": "string"
        },
        "description": "The sort order. By default, returned records are sorted by primary key value in ascending order.\n\ne.g. `?sort=lastName%20ASC`"
      }
    }
  },
  "paths": {
    "/country": {
      "get": {
        "summary": "/country",
        "tags": [
          "CountryStates"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/swagger.json": {
      "get": {
        "summary": "/swagger.json",
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/state/{id}": {
      "get": {
        "summary": "/state/{id}",
        "tags": [
          "CountryStates"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Route pattern variable `id`"
          }
        ],
        "responses": {
          "200": {
            "description": "The requested resource"
          },
          "404": {
            "description": "Resource not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}