server {
    # listen       80;
    # listen  [::]:80;
	listen  443 ssl default_server;

	# SSL configuration
	#
	ssl_certificate      /etc/ssl/#{TOKEN_CERT_KEY_NAME_BE}#.crt;
	ssl_certificate_key  /etc/ssl/#{TOKEN_CERT_KEY_NAME_BE}#.key;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

	client_max_body_size 500M;

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index.html?$query_string;
	}

	location ^~ #{TOKEN_AUTHENTICATION_API_URL}#
    {
		proxy_pass    http://#{TOKEN_AUTHENTICATION_APP_NAME}#:#{TOKEN_AUTHENTICATION_PORT}#/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}
	
	location ^~ #{TOKEN_EMPLOYEE_API_URL}#
    {
		proxy_pass    http://#{TOKEN_EMPLOYEE_APP_NAME}#:#{TOKEN_EMPLOYEE_PORT}#/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}
	
    location ^~ #{TOKEN_MASTER_API_URL}#
    {
		proxy_pass    http://#{TOKEN_MASTER_APP_NAME}#:#{TOKEN_MASTER_PORT}#/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}
	
	location ^~ #{TOKEN_TASK_API_URL}#
    {
		proxy_pass    http://#{TOKEN_TASK_APP_NAME}#:#{TOKEN_TASK_PORT}#/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}
	
	location ^~ #{TOKEN_NOTIFICATION_API_URL}#
    {
		proxy_pass    http://#{TOKEN_NOTIFICATION_APP_NAME}#:#{TOKEN_NOTIFICATION_PORT}#/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}

	location ^~ #{TOKEN_TRAINING_API_URL}#
    {
		proxy_pass    http://#{TOKEN_TRAINING_APP_NAME}#:#{TOKEN_TRAINING_PORT}#/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}

	location ^~ #{TOKEN_COMPETITION_API_URL}#
    {
		proxy_pass    http://#{TOKEN_COMPETITION_APP_NAME}#:#{TOKEN_COMPETITION_PORT}#/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}

	location ^~ #{TOKEN_DAILY_REPORT_API_URL}#
    {
		proxy_pass    http://#{TOKEN_DAILY_REPORT_APP_NAME}#:#{TOKEN_DAILY_REPORT_PORT}#/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}

	location ^~ #{TOKEN_SUPER_ADMIN_API_URL}#
    {
		proxy_pass    http://#{TOKEN_SUPER_ADMIN_APP_NAME}#:#{TOKEN_SUPER_ADMIN_PORT}#/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}

	location ^~ #{TOKEN_PAYMENT_API_URL}#
    {
		proxy_pass    http://#{TOKEN_PAYMENT_APP_NAME}#:#{TOKEN_PAYMENT_PORT}#/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}

		location ^~ #{TOKEN_CRONJOB_API_URL}#
    {
		proxy_pass    http://#{TOKEN_CRONJOB_APP_NAME}#:#{TOKEN_CRONJOB_PORT}#/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
